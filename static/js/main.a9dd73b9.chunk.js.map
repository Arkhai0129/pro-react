{"version":3,"sources":["components/assets/paper.png","components/assets/rock.png","components/assets/scissors.png","components/RockPaper.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","RockPaper","data","playerChoice","setPlayerChoice","useState","computerChoice","setComputerChoice","draw","setDraw","win","setWin","lose","setLose","result","setResult","ChoiceImage","choice","React","createElement","src","rock","alt","paper","scissors","Winner","player","computer","prevDraw","prevWin","prevLose","className","onClick","resetButton","Fragment","map","item","index","newPlayerChoice","newComputerChoice","Math","floor","random","length","handleClick","App","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a9dd73b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paper.450c068a.png\";","module.exports = __webpack_public_path__ + \"static/media/rock.527d86e0.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.1342bdb2.png\";","import React, { useState } from 'react'\r\nimport './styles/style.css'\r\nimport paper from './assets/paper.png'\r\nimport rock from './assets/rock.png'\r\nimport scissors from './assets/scissors.png'\r\n\r\nconst RockPaper = () => {\r\n  const data = ['Rock', 'Paper', 'Scissors']\r\n  const [playerChoice, setPlayerChoice] = useState(' ')\r\n  const [computerChoice, setComputerChoice] = useState(' ')\r\n  const [draw, setDraw] = useState(0)\r\n  const [win, setWin] = useState(0)\r\n  const [lose, setLose] = useState(0)\r\n  const [result, setResult] = useState('Press button to play')\r\n\r\n  const handleClick = (choice) => {\r\n    const newPlayerChoice = choice\r\n    const newComputerChoice = data[Math.floor(Math.random() * data.length)]\r\n\r\n    setPlayerChoice(newPlayerChoice)\r\n    setComputerChoice(newComputerChoice)\r\n\r\n    Winner(newPlayerChoice, newComputerChoice)\r\n  }\r\n\r\n  const ChoiceImage = (choice) => {\r\n    switch (choice) {\r\n      case 'Rock':\r\n        return <img src={rock} alt=\"rock\" />\r\n      case 'Paper':\r\n        return <img src={paper} alt=\"paper\" />\r\n      case 'Scissors':\r\n        return <img src={scissors} alt=\"scissors\" />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  const Winner = (player, computer) => {\r\n    if (player === computer) {\r\n      setDraw((prevDraw) => prevDraw + 1)\r\n      setResult('Draw')\r\n    } else if (\r\n      (player === 'Rock' && computer === 'Scissors') ||\r\n      (player === 'Scissors' && computer === 'Paper') ||\r\n      (player === 'Paper' && computer === 'Rock')\r\n    ) {\r\n      setWin((prevWin) => prevWin + 1)\r\n      setResult('You Won')\r\n    } else {\r\n      setLose((prevLose) => prevLose + 1)\r\n      setResult('You Lost')\r\n    }\r\n  }\r\n\r\n  const resetButton = () => {\r\n    setDraw(0)\r\n    setWin(0)\r\n    setLose(0)\r\n    setResult('Press button to play')\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"display\">\r\n        <h1>{result}</h1>\r\n        <div className=\"statistic\">\r\n          <h3>Draw: {draw}</h3>\r\n          <h3>Win: {win}</h3>\r\n          <h3>Lose: {lose}</h3>\r\n        </div>\r\n        <button className=\"resetButton\" onClick={resetButton}>\r\n          Reset stat\r\n        </button>\r\n        <div className=\"choices\">\r\n          <h2 className=\"playerChoiceText\">Player: {playerChoice}</h2>\r\n          <h2 className=\"playerChoiceText\">Computer: {computerChoice}</h2>\r\n        </div>\r\n        <div className=\"mainDisplay\">\r\n          <div className=\"playerSide\">\r\n            {playerChoice && (\r\n              <>\r\n                <div className=\"playerChoiceImage\">\r\n                  {ChoiceImage(playerChoice)}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"computerSide\">\r\n            {computerChoice && (\r\n              <>\r\n                <div className=\"computerChoiceImage\">\r\n                  {ChoiceImage(computerChoice)}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"button-container\">\r\n        {data.map((item, index) => (\r\n          <button className=\"choice\" onClick={() => handleClick(item)}>\r\n            {item}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RockPaper\r\n","import React from 'react'\r\nimport RockPaper from './components/RockPaper'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <RockPaper />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}